buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url = "https://plugins.gradle.org/m2" }
        maven { url = "http://files.minecraftforge.net/maven" }
        maven { url = 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'io.grpc:grpc-netty-shaded:1.17.1'
        classpath 'io.grpc:grpc-protobuf:1.17.1'
        classpath 'io.grpc:grpc-stub:1.17.1'

        // https://mvnrepository.com/artifact/io.netty/netty-all
        classpath group: 'io.netty', name: 'netty-all', version: '4.1.32.Final'
        // https://mvnrepository.com/artifact/io.netty/netty-tcnative
        classpath group: 'io.netty', name: 'netty-tcnative', version: '2.0.20.Final'

        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
    }
}

configurations {
    shade
    compile.extendsFrom shade
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'java'
apply plugin: 'maven'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.

version = "1.0.0"
group = "net.estinet.gFeatures"
archivesBaseName = "gfeatures"

sourceCompatibility = targetCompatibility = '1.8'
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    //version = "${mc_version}-${forge_version}"
    version = "1.12.2-14.23.5.2768"
    runDir = "run"
    mappings = "snapshot_20180304"
    makeObfSourceJar = false
}

dependencies {
    compile('io.grpc:grpc-netty-shaded:1.17.1') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    compile('io.grpc:grpc-protobuf:1.17.1') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    compile('io.grpc:grpc-stub:1.17.1') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    compile(group: 'io.netty', name: 'netty-all', version: '4.1.32.Final') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
    compile(group: 'io.netty', name: 'netty-tcnative', version: '2.0.20.Final') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

shadowJar {
    relocate "io.grpc", "io.grpc"
    relocate "io.netty", "io.netty"

    baseName = 'gFeatures'
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = null
    version = null
}

jar {
    configurations.shade.each { dep ->
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
}
reobf { shadowJar { mappingType = "SEARGE" } } // IMPORTANT LINE
build.dependsOn(shadowJar)